services:
  php:
    build:
      context: ./docker/php
      # Vous pouvez passer la version de PHP comme argument de build si besoin
      # args:
      #   PHP_VERSION: '8.2'
    container_name: symfony_php_dev
    volumes:
      # Monte le code de votre projet dans le conteneur
      - ./:/var/www/html:cached
      # Vous pouvez décommenter pour monter un php.ini customisé si besoin
      # - ./docker/php/php.ini:/usr/local/etc/php/php.ini:ro
    depends_on:
      - db # S'assure que la BDD est démarrée avant PHP
    networks:
      - symfony_net

  nginx:
    image: nginx:stable-alpine
    container_name: symfony_nginx_dev
    ports:
      # Accès depuis votre machine : http://localhost:8000
      - "8000:80"
    volumes:
      # Monte le code (nginx a besoin d'accéder aux assets dans /public)
      - ./:/var/www/html:cached
      # Monte la configuration Nginx spécifique à Symfony
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php # Dépend du service PHP
    networks:
      - symfony_net

  db:
    image: mysql:8.0 # Ou une version spécifique de MySQL
    container_name: symfony_mysql_dev
    #command: --default-authentication-plugin=mysql_native_password # Pour compatibilité avec anciennes versions de PHP/Symfony si besoin
    environment:
      MYSQL_ROOT_PASSWORD: root # Changez ceci (même pour dev, c'est mieux)
      MYSQL_DATABASE: todo_app_db # Nom de la base de données
      MYSQL_USER: symfony_user # Utilisateur de la BDD
      MYSQL_PASSWORD: symfony_password # Mot de passe de l'utilisateur
    volumes:
      # Volume nommé pour la persistance des données MySQL
      - db_data:/var/lib/mysql
    ports:
      # Optionnel: Exposer le port pour connexion directe depuis le host (ex: avec TablePlus, DBeaver)
      # Attention au conflit si MySQL tourne déjà sur le port 3306 de votre machine
      - "33061:3306"
    networks:
      - symfony_net

  adminer:
    # Ou appelez-le phpmyadmin si vous préférez cette image
    image: adminer # Image officielle d'Adminer (très légère)
    # Pour phpMyAdmin, utilisez : image: phpmyadmin/phpmyadmin
    ports:
      - "8080:8080" # Accès depuis votre navigateur via http://localhost:8080
    # Si vous utilisez phpMyAdmin, le port interne est souvent 80:
    # ports:
    #   - "8081:80" # Accès via http://localhost:8081
    environment:
      # Pour phpMyAdmin, vous pourriez avoir besoin de lier à la DB:
      # PMA_HOST: mysql # Nom du service de base de données
      # PMA_PORT: 3306
      # MYSQL_ROOT_PASSWORD: root_password # Ou les identifiants spécifiques
      ADMINER_DEFAULT_SERVER: symfony_mysql_dev # Pré-remplit le nom du serveur dans Adminer
    depends_on:
      - db # S'assure que mysql démarre avant
    networks:
      - symfony_net

# Volume nommé pour stocker les données de la base de données
volumes:
  db_data:

    # Réseau interne pour que les conteneurs communiquent
networks:
  symfony_net:
    driver: bridge
